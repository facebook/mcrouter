/*
 *  Copyright (c) 2017-present, Facebook, Inc.
 *
 *  This source code is licensed under the MIT license found in the LICENSE
 *  file in the root directory of this source tree.
 *
 */

/*
 *  THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT; ALL CHANGES WILL BE LOST IN
 *  VAIN.
 *
 *  @generated
 */

namespace facebook {
namespace memcache {
namespace test {

template <class V>
void ManyFields::visitFields(V&& v) {
  if (!v.visitField(1, "buf1", buf1_)) {
    return;
  }
  if (!v.visitField(2, "buf2", buf2_)) {
    return;
  }
  if (!v.visitField(3, "buf3", buf3_)) {
    return;
  }
  if (!v.visitField(4, "buf4", buf4_)) {
    return;
  }
  if (!v.visitField(5, "buf5", buf5_)) {
    return;
  }
  if (!v.visitField(6, "buf6", buf6_)) {
    return;
  }
  if (!v.visitField(7, "buf7", buf7_)) {
    return;
  }
  if (!v.visitField(8, "buf8", buf8_)) {
    return;
  }
  if (!v.visitField(9, "buf9", buf9_)) {
    return;
  }
  if (!v.visitField(10, "buf10", buf10_)) {
    return;
  }
  if (!v.visitField(11, "buf11", buf11_)) {
    return;
  }
  if (!v.visitField(12, "buf12", buf12_)) {
    return;
  }
  if (!v.visitField(13, "buf13", buf13_)) {
    return;
  }
  if (!v.visitField(14, "buf14", buf14_)) {
    return;
  }
  if (!v.visitField(15, "buf15", buf15_)) {
    return;
  }
  if (!v.visitField(16, "buf16", buf16_)) {
    return;
  }
  if (!v.visitField(17, "buf17", buf17_)) {
    return;
  }
  if (!v.visitField(18, "buf18", buf18_)) {
    return;
  }
  if (!v.visitField(19, "buf19", buf19_)) {
    return;
  }
  if (!v.visitField(20, "buf20", buf20_)) {
    return;
  }
  if (!v.visitField(21, "buf21", buf21_)) {
    return;
  }
  if (!v.visitField(22, "buf22", buf22_)) {
    return;
  }
  if (!v.visitField(23, "buf23", buf23_)) {
    return;
  }
  if (!v.visitField(24, "buf24", buf24_)) {
    return;
  }
  if (!v.visitField(25, "buf25", buf25_)) {
    return;
  }
  if (!v.visitField(26, "buf26", buf26_)) {
    return;
  }
  if (!v.visitField(27, "buf27", buf27_)) {
    return;
  }
  if (!v.visitField(28, "buf28", buf28_)) {
    return;
  }
  if (!v.visitField(29, "buf29", buf29_)) {
    return;
  }
  if (!v.visitField(30, "buf30", buf30_)) {
    return;
  }
  if (!v.visitField(31, "buf31", buf31_)) {
    return;
  }
  if (!v.visitField(32, "buf32", buf32_)) {
    return;
  }
  if (!v.visitField(33, "buf33", buf33_)) {
    return;
  }
  if (!v.visitField(34, "buf34", buf34_)) {
    return;
  }
  if (!v.visitField(35, "buf35", buf35_)) {
    return;
  }
  if (!v.visitField(36, "buf36", buf36_)) {
    return;
  }
  if (!v.visitField(37, "buf37", buf37_)) {
    return;
  }
  if (!v.visitField(38, "buf38", buf38_)) {
    return;
  }
  if (!v.visitField(39, "buf39", buf39_)) {
    return;
  }
  if (!v.visitField(40, "buf40", buf40_)) {
    return;
  }
}

template <class V>
void ManyFields::visitFields(V&& v) const {
  if (!v.visitField(1, "buf1", buf1_)) {
    return;
  }
  if (!v.visitField(2, "buf2", buf2_)) {
    return;
  }
  if (!v.visitField(3, "buf3", buf3_)) {
    return;
  }
  if (!v.visitField(4, "buf4", buf4_)) {
    return;
  }
  if (!v.visitField(5, "buf5", buf5_)) {
    return;
  }
  if (!v.visitField(6, "buf6", buf6_)) {
    return;
  }
  if (!v.visitField(7, "buf7", buf7_)) {
    return;
  }
  if (!v.visitField(8, "buf8", buf8_)) {
    return;
  }
  if (!v.visitField(9, "buf9", buf9_)) {
    return;
  }
  if (!v.visitField(10, "buf10", buf10_)) {
    return;
  }
  if (!v.visitField(11, "buf11", buf11_)) {
    return;
  }
  if (!v.visitField(12, "buf12", buf12_)) {
    return;
  }
  if (!v.visitField(13, "buf13", buf13_)) {
    return;
  }
  if (!v.visitField(14, "buf14", buf14_)) {
    return;
  }
  if (!v.visitField(15, "buf15", buf15_)) {
    return;
  }
  if (!v.visitField(16, "buf16", buf16_)) {
    return;
  }
  if (!v.visitField(17, "buf17", buf17_)) {
    return;
  }
  if (!v.visitField(18, "buf18", buf18_)) {
    return;
  }
  if (!v.visitField(19, "buf19", buf19_)) {
    return;
  }
  if (!v.visitField(20, "buf20", buf20_)) {
    return;
  }
  if (!v.visitField(21, "buf21", buf21_)) {
    return;
  }
  if (!v.visitField(22, "buf22", buf22_)) {
    return;
  }
  if (!v.visitField(23, "buf23", buf23_)) {
    return;
  }
  if (!v.visitField(24, "buf24", buf24_)) {
    return;
  }
  if (!v.visitField(25, "buf25", buf25_)) {
    return;
  }
  if (!v.visitField(26, "buf26", buf26_)) {
    return;
  }
  if (!v.visitField(27, "buf27", buf27_)) {
    return;
  }
  if (!v.visitField(28, "buf28", buf28_)) {
    return;
  }
  if (!v.visitField(29, "buf29", buf29_)) {
    return;
  }
  if (!v.visitField(30, "buf30", buf30_)) {
    return;
  }
  if (!v.visitField(31, "buf31", buf31_)) {
    return;
  }
  if (!v.visitField(32, "buf32", buf32_)) {
    return;
  }
  if (!v.visitField(33, "buf33", buf33_)) {
    return;
  }
  if (!v.visitField(34, "buf34", buf34_)) {
    return;
  }
  if (!v.visitField(35, "buf35", buf35_)) {
    return;
  }
  if (!v.visitField(36, "buf36", buf36_)) {
    return;
  }
  if (!v.visitField(37, "buf37", buf37_)) {
    return;
  }
  if (!v.visitField(38, "buf38", buf38_)) {
    return;
  }
  if (!v.visitField(39, "buf39", buf39_)) {
    return;
  }
  if (!v.visitField(40, "buf40", buf40_)) {
    return;
  }
}
} // namespace test
} // namespace memcache
} // namespace facebook
