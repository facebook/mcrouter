/*
 *  Copyright (c) 2017-present, Facebook, Inc.
 *
 *  This source code is licensed under the MIT license found in the LICENSE
 *  file in the root directory of this source tree.
 *
 */

/*
 *  THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT; ALL CHANGES WILL BE LOST IN
 *  VAIN.
 *
 *  @generated
 */
include "mcrouter/lib/carbon/carbon.thrift"
include "mcrouter/lib/carbon/carbon_result.thrift"
include "mcrouter/lib/network/gen/Common.thrift"

namespace cpp2 facebook.memcache.thrift

struct McGetRequest {
  1: carbon.IOBufKey key
  2: i64 (cpp.type = "uint64_t") flags
}

struct McGetReply {
  1: carbon_result.Result result
  2: optional binary (cpp.type = "folly::IOBuf") value
  3: i64 (cpp.type = "uint64_t") flags
  4: string message
  5: i16 appSpecificErrorCode
}

struct McSetRequest {
  1: carbon.IOBufKey key
  2: i32 exptime
  3: i64 (cpp.type = "uint64_t") flags
  4: binary (cpp.type = "folly::IOBuf") value
}

struct McSetReply {
  1: carbon_result.Result result
  2: i64 (cpp.type = "uint64_t") flags
  3: binary (cpp.type = "folly::IOBuf") value
  4: string message
  5: i16 appSpecificErrorCode
}

struct McDeleteRequest {
  1: carbon.IOBufKey key
  2: i64 (cpp.type = "uint64_t") flags
  3: i32 exptime
  4: binary (cpp.type = "folly::IOBuf") value
}

struct McDeleteReply {
  1: carbon_result.Result result
  2: i64 (cpp.type = "uint64_t") flags
  3: binary (cpp.type = "folly::IOBuf") value
  4: string message
  5: i16 appSpecificErrorCode
}

struct McLeaseGetRequest {
  1: carbon.IOBufKey key
  2: i64 (cpp.type = "uint64_t") flags
}

struct McLeaseGetReply {
  1: carbon_result.Result result
  2: i64 leaseToken
  3: optional binary (cpp.type = "folly::IOBuf") value
  4: i64 (cpp.type = "uint64_t") flags
  5: string message
  6: i16 appSpecificErrorCode
}

struct McLeaseSetRequest {
  1: carbon.IOBufKey key
  2: i32 exptime
  3: i64 (cpp.type = "uint64_t") flags
  4: binary (cpp.type = "folly::IOBuf") value
  5: i64 leaseToken
}

struct McLeaseSetReply {
  1: carbon_result.Result result
  2: string message
  3: i16 appSpecificErrorCode
}

struct McAddRequest {
  1: carbon.IOBufKey key
  2: i32 exptime
  3: i64 (cpp.type = "uint64_t") flags
  4: binary (cpp.type = "folly::IOBuf") value
}

struct McAddReply {
  1: carbon_result.Result result
  2: string message
  3: i16 appSpecificErrorCode
}

struct McReplaceRequest {
  1: carbon.IOBufKey key
  2: i32 exptime
  3: i64 (cpp.type = "uint64_t") flags
  4: binary (cpp.type = "folly::IOBuf") value
}

struct McReplaceReply {
  1: carbon_result.Result result
  2: string message
  3: i16 appSpecificErrorCode
}

struct McGetsRequest {
  1: carbon.IOBufKey key
}

struct McGetsReply {
  1: carbon_result.Result result
  2: i64 (cpp.type = "uint64_t") casToken
  3: optional binary (cpp.type = "folly::IOBuf") value
  4: i64 (cpp.type = "uint64_t") flags
  5: string message
  6: i16 appSpecificErrorCode
}

struct McCasRequest {
  1: carbon.IOBufKey key
  2: i32 exptime
  3: i64 (cpp.type = "uint64_t") flags
  4: binary (cpp.type = "folly::IOBuf") value
  5: i64 (cpp.type = "uint64_t") casToken
}

struct McCasReply {
  1: carbon_result.Result result
  2: string message
  3: i16 appSpecificErrorCode
}

struct McIncrRequest {
  1: carbon.IOBufKey key
  2: i64 delta
}

struct McIncrReply {
  1: carbon_result.Result result
  2: i64 delta
  3: string message
  4: i16 appSpecificErrorCode
}

struct McDecrRequest {
  1: carbon.IOBufKey key
  2: i64 delta
}

struct McDecrReply {
  1: carbon_result.Result result
  2: i64 delta
  3: string message
  4: i16 appSpecificErrorCode
}

struct McMetagetRequest {
  1: carbon.IOBufKey key
}

struct McMetagetReply {
  1: carbon_result.Result result
  2: i32 age
  3: i32 exptime
  4: i16 ipv
  5: string ipAddress
  6: string message
  7: i16 appSpecificErrorCode
}

struct McAppendRequest {
  1: carbon.IOBufKey key
  2: i32 exptime
  3: i64 (cpp.type = "uint64_t") flags
  4: binary (cpp.type = "folly::IOBuf") value
}

struct McAppendReply {
  1: carbon_result.Result result
  2: string message
  3: i16 appSpecificErrorCode
}

struct McPrependRequest {
  1: carbon.IOBufKey key
  2: i32 exptime
  3: i64 (cpp.type = "uint64_t") flags
  4: binary (cpp.type = "folly::IOBuf") value
}

struct McPrependReply {
  1: carbon_result.Result result
  2: string message
  3: i16 appSpecificErrorCode
}

struct McTouchRequest {
  1: carbon.IOBufKey key
  2: i32 exptime
}

struct McTouchReply {
  1: carbon_result.Result result
  2: string message
  3: i16 appSpecificErrorCode
}

struct McFlushReRequest {
  1: carbon.IOBufKey key
}

struct McFlushReReply {
  1: carbon_result.Result result
  2: string message
  3: i16 appSpecificErrorCode
}

struct McFlushAllRequest {
  1: carbon.IOBufKey key
  2: i32 delay
}

struct McFlushAllReply {
  1: carbon_result.Result result
  2: string message
  3: i16 appSpecificErrorCode
}

struct McGatRequest {
  1: i32 exptime
  2: carbon.IOBufKey key
}

struct McGatReply {
  1: carbon_result.Result result
  2: optional binary (cpp.type = "folly::IOBuf") value
  3: i64 (cpp.type = "uint64_t") flags
  4: string message
  5: i16 appSpecificErrorCode
}

struct McGatsRequest {
  1: i32 exptime
  2: carbon.IOBufKey key
}

struct McGatsReply {
  1: carbon_result.Result result
  2: i64 (cpp.type = "uint64_t") casToken
  3: optional binary (cpp.type = "folly::IOBuf") value
  4: i64 (cpp.type = "uint64_t") flags
  5: string message
  6: i16 appSpecificErrorCode
}

