/*
 *  Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 *  This source code is licensed under the MIT license found in the LICENSE
 *  file in the root directory of this source tree.
 *
 */

/*
 *  THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT; ALL CHANGES WILL BE LOST IN
 *  VAIN.
 *
 *  @generated
 */
include "thrift/annotation/cpp.thrift"
include "mcrouter/lib/network/gen/Common.thrift"
include "mcrouter/lib/carbon/example/gen/HelloGoodbye.thrift"

cpp_include "mcrouter/lib/carbon/example/gen/HelloGoodbyeMessages.h"

namespace cpp2 hellogoodbye.thrift
namespace py3 hellogoodbye.thrift

service HelloGoodbye {
  HelloGoodbye_GoodbyeReply goodbye(1: HelloGoodbye_GoodbyeRequest request) (thread = "eb")
  HelloGoodbye_HelloReply hello(1: HelloGoodbye_HelloRequest request) throws (1: Common.CarbonResultBusy carbonResultBusy, 2: Common.CarbonResultRemoteError carbonResultRemoteError) (thread = "eb")
  Common_McVersionReply mcVersion(1: Common_McVersionRequest request) (thread = "eb")
}

@cpp.Type{name = "hellogoodbye::GoodbyeReply"}
typedef HelloGoodbye.GoodbyeReply HelloGoodbye_GoodbyeReply
@cpp.Type{name = "hellogoodbye::GoodbyeRequest"}
typedef HelloGoodbye.GoodbyeRequest HelloGoodbye_GoodbyeRequest
@cpp.Type{name = "hellogoodbye::HelloReply"}
typedef HelloGoodbye.HelloReply HelloGoodbye_HelloReply
@cpp.Type{name = "hellogoodbye::HelloRequest"}
typedef HelloGoodbye.HelloRequest HelloGoodbye_HelloRequest
@cpp.Type{name = "facebook::memcache::McVersionReply"}
typedef Common.McVersionReply Common_McVersionReply
@cpp.Type{name = "facebook::memcache::McVersionRequest"}
typedef Common.McVersionRequest Common_McVersionRequest